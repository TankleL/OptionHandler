{"name":"Optionhandler","tagline":"Make handling command line options in C++ easy with a sane, simple API. A replacement for getopt_long.","body":"# OptionHandler 0.2\r\nMake handling command line options in C++ easy with a sane, simple API. A replacement for [getopt_long](http://www.gnu.org/software/libc/manual/html_node/Getopt.html#Getopt).\r\n\r\n## Useage\r\nTo use with your code, simply include `option_handler.h` in your `.cpp`, `.hpp`, or `.h` file.\r\n\r\n### Command Line Usage\r\n\r\nOn the command line you can allow your program to take in long or short options.\r\n\r\n    ./myprogram --mode FASTMODE --stocks GOOG AAPL AMZN --statistics\r\n\r\nThis is equivalent:\r\n\r\n    ./myprogram -m FASTMODE -s GOOG AAPL AMZN -t\r\n\r\n### Developer Usage\r\n\r\n#### Instantiation\r\n\r\nInstantiate an option handler by passing in the command line input (`argv` and `argc`):\r\n\r\n    OptionHandler::Handler h = OptionHandler::Handler(argc, argv);\r\n\r\n##### Adding Options\r\n\r\nAdd options with `add_option`:\r\n\r\n    // Follows h.add_option(short_name, long_name, arg_type, multiple);\r\n    // For example: \r\n    h.add_option('m', \"mode\", OptionHandler::REQUIRED, false);\r\n\r\nAnd options has these arguments:\r\n\r\n1. `short_name` is a `char`\r\n2. `long_name` is a `std::string`\r\n3. `arg_type` is one of \r\n  * `OptionHandler::NONE`\r\n      * If an option is NONE, and an argument is passed to it, an exception is thrown\r\n      * All NONE options should be wrapped in a try/catch block \r\n  * `OptionHandler::REQUIRED`\r\n      * If an option is REQUIRED, and no argument is passed to it, an exception is thrown\r\n      * All REQUIRED options should be wrapped in a try/catch block \r\n  * `OptionHandler::OPTIONAL`\r\n4. `multiple` is a bool indicating whether an argument can take multiple arguments\r\n  * if `multiple` is set to `false` the last argument passed to the option is set as it's only argument\r\n  * if `multiple` is set to `true` all arguments passed to the option are saved in a `vector<string>`\r\n\r\n#### Accessing Options\r\n\r\nAll accessors are called by passing in the desired option's `long_name`.\r\n\r\n##### Checking if an option was set\r\n\r\nTo check whether an option has been used, call `get_option`:\r\n\r\n    // get_option returns whether an option was set\r\n    bool exists = h.get_option(\"exists\"), \r\n         help   = h.get_option(\"help\");\r\n\r\n##### Get an argument passed to an option\r\n\r\nTo get the last argument passed to an option, call `get_argument`:\r\n\r\n    // get_argument returns a string passed to an option\r\n    std::string song  = h.get_argument(\"song\"),\r\n                movie = h.get_argument(\"movie\");\r\n\r\n##### Get all arguments passed to an option\r\n\r\nTo get a `vector<string>` of all arguments passed to an option, call `get_arguments`:\r\n\r\n    // get_arguments returns a vector of arguments (strings) passed to an option\r\n    std::vector<std::string> albums = h.get_arguments(\"albums\"),\r\n                             films  = h.get_arguments(\"films\");\r\n\r\n## License\r\nCopyright (&copy;) 2012 Ryan Gonzalez <ryan@ionizedmedia.com> &amp; Haoran Ning <hning@umich.edu>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of \r\nthis software and associated documentation files (the \"Software\"), to deal in \r\nthe Software without restriction, including without limitation the rights to \r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \r\nof the Software, and to permit persons to whom the Software is furnished to do \r\nso, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all \r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \r\nSOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}